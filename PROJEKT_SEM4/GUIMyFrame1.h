#ifndef __GUIMyFrame1__
#define __GUIMyFrame1__

/**
@file
Subclass of MyFrame1, which is generated by wxFormBuilder.
*/

#include "GUI.h"

//// end generated include
#include <wx/filedlg.h>
#include <wx/dcmemory.h>
#include <wx/dcclient.h>
#include <wx/dcbuffer.h>
#include <wx/colourdata.h>
#include <wx/colordlg.h>
#include <tuple>
#include <vector>
#include "wec.h"
#include "structures.h"
#include "ViewWindow.h"

struct Resolution
{
    Resolution(const int w = 640, const int h = 480) : width(w), height(h) {};
    std::string toString() const
    {
        return std::string(std::to_string(width) + "x" + std::to_string(height));
    }
    
    int width, height;
};

/** Implementing MyFrame1 */
class GUIMyFrame1 : public MyFrame1
{
protected:
	// Handlers for MyFrame1 events.
	~GUIMyFrame1();
	void wczytajOnButtonClick(wxCommandEvent& event);
	void obrot_x_sliderOnScroll(wxScrollEvent& event);
	void obrot_y_sliderOnScroll(wxScrollEvent& event);
	void obrot_z_sliderOnScroll(wxScrollEvent& event);
	void focus_sliderOnScroll(wxScrollEvent& event);
	void zapiszOnButtonClick(wxCommandEvent& event);
	void distance_eye_sliderOnScroll(wxScrollEvent& event);
	void color_left_colourPickerOnColourChanged(wxColourPickerEvent& event);
	void color_right_colourPickerOnColourChanged(wxColourPickerEvent& event);
	void openViewWindowBtnOnButtonClick(wxCommandEvent& event);
	void sfmlTimerOnTimer(wxTimerEvent& event);
    void ResolutionChoiceOnChoice( wxCommandEvent& event );

	void closeRenderWindow();
	void openRenderWindow(const bool restart, const int width = 800, const int height = 650, const char* title = "Render window");
public:
	/** Constructor */
	GUIMyFrame1(wxWindow* parent);
	//// end generated class members

	Matrix4 rotacja() const;

	ViewWindow* viewWindow;

	std::vector<Section> data;
	unsigned liczba_k; //liczba krawÄ™dzi
};


#endif // __GUIMyFrame1__
